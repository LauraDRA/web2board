#!/usr/bin/env python
# coding=utf-8
import os
import subprocess
import pwd
import logging
from os.path import expanduser


def startLogger():

        if os.geteuid() != 0:
            fileHandler = logging.FileHandler("installer.log", 'a')
        else:
            fileHandler = logging.FileHandler("/opt/web2board/installer.log", 'a')
        fileHandler.setLevel(logging.DEBUG)
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        fileHandler.setFormatter(formatter)
        log = logging.getLogger()
        log.addHandler(fileHandler)
        log.setLevel(logging.DEBUG)
        return logging.getLogger(__name__)

def addAllUsersToDialOut():
    allUsers = [p[0] for p in pwd.getpwall()]
    for user in allUsers:
        subprocess.call(["sudo", "adduser", user, "dialout"])

def addHandlerInMimeapps():
    BITBLOQS_HANDLER1 = """

#custom handler for bitbloqs web2board:
x-scheme-handler/web2board=web2board-handler.desktop
"""
    BITBLOQS_HANDLER2 = """

#custom handler for bitbloqs web2board:
x-scheme-handler/web2board=/opt/web2board/web2boardLink
#END_WEB2BOARD_HANDLER
"""

    homePath = expanduser("~")
    applicationsPath = os.path.join(homePath, ".local/share/applications")
    mineAppsFilePath = os.path.join(applicationsPath, "mimeapps.list")

    if not os.path.exists(applicationsPath):
        os.makedirs(applicationsPath)


    if os.path.isfile(mineAppsFilePath):
        with open(mineAppsFilePath) as f:
            fContent = f.read()
        fContent = fContent.replace(BITBLOQS_HANDLER2, "")
        fContent = fContent.replace(BITBLOQS_HANDLER1, "")
        if "[Default Applications]" not in fContent:
            fContent = "[Default Applications]\n" + fContent
        with open(mineAppsFilePath, "w") as f:
            f.write(fContent)

    with open(mineAppsFilePath, 'a') as f:
        f.write(BITBLOQS_HANDLER2)

if __name__ == '__main__':
    try:
        log = startLogger()
        log.info("Script started")
        log.info("Adding users to dialout")
        addAllUsersToDialOut()
        log.info("Adding handler in Mine Apps file")
        addHandlerInMimeapps()
    except:
        log.exception("Failed performing postinst")
        raise

